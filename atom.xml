<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>许宜森的个人博客</title>
  
  <subtitle>机器学习|深度学习|软件工程</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://daixinyuxuyisen.cn/"/>
  <updated>2018-06-09T14:07:14.317Z</updated>
  <id>http://daixinyuxuyisen.cn/</id>
  
  <author>
    <name>许宜森</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>AST树提取进展</title>
    <link href="http://daixinyuxuyisen.cn/2018/06/09/experment1/"/>
    <id>http://daixinyuxuyisen.cn/2018/06/09/experment1/</id>
    <published>2018-06-09T12:55:53.000Z</published>
    <updated>2018-06-09T14:07:14.317Z</updated>
    
    <content type="html"><![CDATA[<h2 id="今天主要把昨天没有做完的工作进行了扩展，由提取单一文件的叶子节点扩展到提取到整个项目的叶子节点，然后将类级别的数据修改成方法级别的数据"><a href="#今天主要把昨天没有做完的工作进行了扩展，由提取单一文件的叶子节点扩展到提取到整个项目的叶子节点，然后将类级别的数据修改成方法级别的数据" class="headerlink" title="今天主要把昨天没有做完的工作进行了扩展，由提取单一文件的叶子节点扩展到提取到整个项目的叶子节点，然后将类级别的数据修改成方法级别的数据"></a>今天主要把昨天没有做完的工作进行了扩展，由提取单一文件的叶子节点扩展到提取到整个项目的叶子节点，然后将类级别的数据修改成方法级别的数据</h2><a id="more"></a><ul><li>实验步骤：<ul><li>按照昨天写的代码，只需要加一个循环遍历文件的函数就可以了 <img src="https://i.loli.net/2018/06/09/5b1bcfec946d8.png" alt="图片描述">然后第一个问题出现了，scala meta 这个工具还不是很成熟，对于部分文件在parse的时候会抛出异常 <img src="https://i.loli.net/2018/06/09/5b1bd122d8519.png" alt="图片描述"><br>在网上查了好久，网上也有许多人遇到这个问题，但是scala meta并没有提供解决的办法。经过不懈的努力，最终在评论区找到了解决方法，这个bug主要是<code>s&quot;xxxxxxx&quot;</code>后面直接换行引起的(黑人问号)，只要在<code>\n</code>后面加一个空格就可以了(黑人问号)。 <img src="https://i.loli.net/2018/06/09/5b1bd7d5baf20.png" alt="图片描述"><br>所以我就对我们输入的数据进行了预处理，所有包含字符串<code>s&quot;xxxxx&quot;</code>的行的<code>\n</code>都进行了变换。 <img src="https://i.loli.net/2018/06/09/5b1bd828e787a.png" alt="图片描述"></li><li>第二个问题，嵌套函数的问题，因为我们测试的数据是在方法级别上的进行抽取，所以就会出现嵌套函数的问题，具体的嵌套函数的示例如下图所示：    <img src="https://i.loli.net/2018/06/09/5b1bd8cbbc23b.png" alt="图片描述"> 在这里的问题主要是将子函数抽取出来作为一条数据还是将子函数作为一条像if语句那样的句子作为父函数的一部分，经过跟几位老师讨论，我们决定采用第一种方式，原因是第一子函数的粒度小，第二就是在函数的功能上面还是子函数为主，对于第四种类型的代码克隆的判断来说更加有利。所以我利用栈的思想将子函数剥离出来：<img src="https://i.loli.net/2018/06/09/5b1bd922794ab.png" alt="图片描述"><br>最终的结果是：    <img src="https://i.loli.net/2018/06/09/5b1bd8eb96c6d.png" alt="图片描述"><br>其中13是父函数，12是子函数。</li></ul></li><li>最终结果：<ul><li>成功提取spark代码里面的27042条样本，明天开始进行测试算法效果，并且再读一遍论文，整理一下文档<br><img src="https://i.loli.net/2018/06/09/5b1bd8a286de6.png" alt="图片描述"><br>加油！！！！  还要好好学一下英语和线代和算法！！！</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;今天主要把昨天没有做完的工作进行了扩展，由提取单一文件的叶子节点扩展到提取到整个项目的叶子节点，然后将类级别的数据修改成方法级别的数据&quot;&gt;&lt;a href=&quot;#今天主要把昨天没有做完的工作进行了扩展，由提取单一文件的叶子节点扩展到提取到整个项目的叶子节点，然后将类级别的数据修改成方法级别的数据&quot; class=&quot;headerlink&quot; title=&quot;今天主要把昨天没有做完的工作进行了扩展，由提取单一文件的叶子节点扩展到提取到整个项目的叶子节点，然后将类级别的数据修改成方法级别的数据&quot;&gt;&lt;/a&gt;今天主要把昨天没有做完的工作进行了扩展，由提取单一文件的叶子节点扩展到提取到整个项目的叶子节点，然后将类级别的数据修改成方法级别的数据&lt;/h2&gt;
    
    </summary>
    
      <category term="Scala" scheme="http://daixinyuxuyisen.cn/categories/Scala/"/>
    
    
      <category term="AST" scheme="http://daixinyuxuyisen.cn/tags/AST/"/>
    
  </entry>
  
  <entry>
    <title>AST</title>
    <link href="http://daixinyuxuyisen.cn/2018/06/08/AST/"/>
    <id>http://daixinyuxuyisen.cn/2018/06/08/AST/</id>
    <published>2018-06-08T01:42:52.000Z</published>
    <updated>2018-06-09T14:12:10.833Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Scala-AST-叶子节点提取"><a href="#Scala-AST-叶子节点提取" class="headerlink" title="Scala AST 叶子节点提取"></a>Scala AST 叶子节点提取</h3><ul><li>背景：<ul><li>前几天由于考试没有来得及整理基础知识，今天在这里先整理一下这两天做的Scala叶子节点的值提取</li><li>Scala 是一门多范式（multi-paradigm）的编程语言，设计初衷是要集成面向对象编程和函数式编程的各种特性。Scala 运行在Java虚拟机上，并兼容现有的Java程序。Scala 源代码被编译成Java字节码，所以它可以运行于JVM之上，并可以调用现有的Java类库。(百度百科）<a id="more"></a></li></ul></li><li>实验步骤：<ul><li>使用的工具：<ul><li>scala meta : <a href="https://scalameta.org/" target="_blank" rel="noopener">https://scalameta.org/</a></li><li>Intellij Idea: <a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">https://www.jetbrains.com/idea/</a></li></ul></li><li>借助的参考资料：<ul><li>scala meta的示例程序</li><li>浏览器 构造 scala AST 树：<a href="https://astexplorer.net/#/gist/22cf8a3fcb2155c087ae94b4d194c1b6/d10c646ecfae4c69c919408aa3aaefb2deda2df7" target="_blank" rel="noopener">https://astexplorer.net/#/gist/22cf8a3fcb2155c087ae94b4d194c1b6/d10c646ecfae4c69c919408aa3aaefb2deda2df7</a></li></ul></li><li>实验带代码：<br>  查看 scala meta 源程序可以发现 ，该工具里面有一个Tree的类，该类有children 属性和parent属性：<img src="https://i.loli.net/2018/06/08/5b1a5c0fda8dd.png" alt="图片描述"><br>  所以可以根据这个类来进行遍历得到我们需要的叶子节点的数据，在这里我采用visitor的方式来进行遍历。主要的遍历的对象有以下几个：<br>  <img src="https://i.loli.net/2018/06/08/5b1a5cab0871e.png" alt="图片描述"><br>  分别代表Scala中的各个语法，这里在做的时候出现了几个问题。一个是Term.param和Type.param 需要“精准的查找”，不能像其他的Term.Name,Term.Annonate那样，可以通过Term来进行查找：<img src="https://i.loli.net/2018/06/08/5b1a5dc5f0c91.png" alt="标题"><br>  也就是说其他的Term里面的属性可以通过遍历Term然后再进行查找，但是这个Term.param必须在第一次遍历的时候就指出来，难道Term.param不属于Term?很奇怪。以后再查一查。</li><li>代码的逻辑并不难，下面就开始打印叶子节点，通过观察浏览器AST解析器<a href="https://astexplorer.net/#/gist/22cf8a3fcb2155c087ae94b4d194c1b6/d10c646ecfae4c69c919408aa3aaefb2deda2df7" target="_blank" rel="noopener">https://astexplorer.net/#/gist/22cf8a3fcb2155c087ae94b4d194c1b6/d10c646ecfae4c69c919408aa3aaefb2deda2df7</a><br>发现：叶子节点主要在以下几个地方打印：<br><img src="https://i.loli.net/2018/06/08/5b1a5f3dcd9de.png" alt="图片描述">基本数据类型<br><img src="https://i.loli.net/2018/06/08/5b1a5f81f12ba.png" alt="图片描述">Term.Name处<img src="https://i.loli.net/2018/06/08/5b1a5fb82699e.png" alt="图片描述">Type.Name 处<br>还有一个是Name处</li></ul></li><li>实验的最终结果：<ul><li><img src="https://i.loli.net/2018/06/08/5b1a6012ac69a.png" alt="图片描述">Scala 源代码</li><li><img src="https://i.loli.net/2018/06/08/5b1a604443ddf.png" alt="图片描述"> 提取的叶子节点</li><li><img src="https://i.loli.net/2018/06/08/5b1a609ceb152.png" alt="图片描述"> 源代码</li><li><img src="https://i.loli.net/2018/06/08/5b1a60d3a65f9.png" alt="图片描述"> 提取的叶子节点</li></ul></li><li>总结：实验结果还未仔细观察，具体的细节有待改进，还有就是上次说的将string值改成<string>等基本数据的转化还未加入。</string></li></ul><p>本博客持续更新。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Scala-AST-叶子节点提取&quot;&gt;&lt;a href=&quot;#Scala-AST-叶子节点提取&quot; class=&quot;headerlink&quot; title=&quot;Scala AST 叶子节点提取&quot;&gt;&lt;/a&gt;Scala AST 叶子节点提取&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;背景：&lt;ul&gt;
&lt;li&gt;前几天由于考试没有来得及整理基础知识，今天在这里先整理一下这两天做的Scala叶子节点的值提取&lt;/li&gt;
&lt;li&gt;Scala 是一门多范式（multi-paradigm）的编程语言，设计初衷是要集成面向对象编程和函数式编程的各种特性。Scala 运行在Java虚拟机上，并兼容现有的Java程序。Scala 源代码被编译成Java字节码，所以它可以运行于JVM之上，并可以调用现有的Java类库。(百度百科）
    
    </summary>
    
      <category term="Scala" scheme="http://daixinyuxuyisen.cn/categories/Scala/"/>
    
    
      <category term="AST" scheme="http://daixinyuxuyisen.cn/tags/AST/"/>
    
  </entry>
  
  <entry>
    <title>日记</title>
    <link href="http://daixinyuxuyisen.cn/2018/06/06/daily1/"/>
    <id>http://daixinyuxuyisen.cn/2018/06/06/daily1/</id>
    <published>2018-06-06T12:01:21.000Z</published>
    <updated>2018-06-06T12:20:44.541Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read.</h3><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" password " /> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div>]]></content>
    
    <summary type="html">
    
      the content has been encrypted, enter the password to read.&lt;/br&gt;
    
    </summary>
    
      <category term="日记" scheme="http://daixinyuxuyisen.cn/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="日记" scheme="http://daixinyuxuyisen.cn/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>软件工程复习提纲</title>
    <link href="http://daixinyuxuyisen.cn/2018/06/01/software-review/"/>
    <id>http://daixinyuxuyisen.cn/2018/06/01/software-review/</id>
    <published>2018-06-01T02:10:54.392Z</published>
    <updated>2018-06-06T11:07:32.960Z</updated>
    
    <content type="html"><![CDATA[<p>本博客是根据软件工程最后一节重点课总结的内容，对软件工程的知识进行了简单的梳理</p><h3 id="软件工程简述"><a href="#软件工程简述" class="headerlink" title="软件工程简述"></a>软件工程简述</h3><ul><li>软件工程定义：<ul><li>软件工程是研究应用如何以系统性的、规范化的、可定量的过程化方法</li><li>去开发和维护软件，</li><li>以及如何把经过时间考验而证明正确的管理技术和当前能够得到的最好的技术结合起来</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本博客是根据软件工程最后一节重点课总结的内容，对软件工程的知识进行了简单的梳理&lt;/p&gt;
&lt;h3 id=&quot;软件工程简述&quot;&gt;&lt;a href=&quot;#软件工程简述&quot; class=&quot;headerlink&quot; title=&quot;软件工程简述&quot;&gt;&lt;/a&gt;软件工程简述&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;软
      
    
    </summary>
    
      <category term="学科复习" scheme="http://daixinyuxuyisen.cn/categories/%E5%AD%A6%E7%A7%91%E5%A4%8D%E4%B9%A0/"/>
    
    
      <category term="软件工程" scheme="http://daixinyuxuyisen.cn/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
</feed>
