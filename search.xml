<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>AST树提取进展</title>
      <link href="/2018/06/09/experment1/"/>
      <url>/2018/06/09/experment1/</url>
      <content type="html"><![CDATA[<h2 id="今天主要把昨天没有做完的工作进行了扩展，由提取单一文件的叶子节点扩展到提取到整个项目的叶子节点，然后将类级别的数据修改成方法级别的数据"><a href="#今天主要把昨天没有做完的工作进行了扩展，由提取单一文件的叶子节点扩展到提取到整个项目的叶子节点，然后将类级别的数据修改成方法级别的数据" class="headerlink" title="今天主要把昨天没有做完的工作进行了扩展，由提取单一文件的叶子节点扩展到提取到整个项目的叶子节点，然后将类级别的数据修改成方法级别的数据"></a>今天主要把昨天没有做完的工作进行了扩展，由提取单一文件的叶子节点扩展到提取到整个项目的叶子节点，然后将类级别的数据修改成方法级别的数据</h2><a id="more"></a><ul><li>实验步骤：<ul><li>按照昨天写的代码，只需要加一个循环遍历文件的函数就可以了 <img src="https://i.loli.net/2018/06/09/5b1bcfec946d8.png" alt="图片描述">然后第一个问题出现了，scala meta 这个工具还不是很成熟，对于部分文件在parse的时候会抛出异常 <img src="https://i.loli.net/2018/06/09/5b1bd122d8519.png" alt="图片描述"><br>在网上查了好久，网上也有许多人遇到这个问题，但是scala meta并没有提供解决的办法。经过不懈的努力，最终在评论区找到了解决方法，这个bug主要是<code>s&quot;xxxxxxx&quot;</code>后面直接换行引起的(黑人问号)，只要在<code>\n</code>后面加一个空格就可以了(黑人问号)。 <img src="https://i.loli.net/2018/06/09/5b1bd7d5baf20.png" alt="图片描述"><br>所以我就对我们输入的数据进行了预处理，所有包含字符串<code>s&quot;xxxxx&quot;</code>的行的<code>\n</code>都进行了变换。 <img src="https://i.loli.net/2018/06/09/5b1bd828e787a.png" alt="图片描述"></li><li>第二个问题，嵌套函数的问题，因为我们测试的数据是在方法级别上的进行抽取，所以就会出现嵌套函数的问题，具体的嵌套函数的示例如下图所示：    <img src="https://i.loli.net/2018/06/09/5b1bd8cbbc23b.png" alt="图片描述"> 在这里的问题主要是将子函数抽取出来作为一条数据还是将子函数作为一条像if语句那样的句子作为父函数的一部分，经过跟几位老师讨论，我们决定采用第一种方式，原因是第一子函数的粒度小，第二就是在函数的功能上面还是子函数为主，对于第四种类型的代码克隆的判断来说更加有利。所以我利用栈的思想将子函数剥离出来：<img src="https://i.loli.net/2018/06/09/5b1bd922794ab.png" alt="图片描述"><br>最终的结果是：    <img src="https://i.loli.net/2018/06/09/5b1bd8eb96c6d.png" alt="图片描述"><br>其中13是父函数，12是子函数。</li></ul></li><li>最终结果：<ul><li>成功提取spark代码里面的27042条样本，明天开始进行测试算法效果，并且再读一遍论文，整理一下文档<br><img src="https://i.loli.net/2018/06/09/5b1bd8a286de6.png" alt="图片描述"><br>加油！！！！  还要好好学一下英语和线代和算法！！！</li></ul></li></ul>]]></content>
      
      <categories>
          
          <category> Scala </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AST </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>AST</title>
      <link href="/2018/06/08/AST/"/>
      <url>/2018/06/08/AST/</url>
      <content type="html"><![CDATA[<h3 id="Scala-AST-叶子节点提取"><a href="#Scala-AST-叶子节点提取" class="headerlink" title="Scala AST 叶子节点提取"></a>Scala AST 叶子节点提取</h3><ul><li>背景：<ul><li>前几天由于考试没有来得及整理基础知识，今天在这里先整理一下这两天做的Scala叶子节点的值提取</li><li>Scala 是一门多范式（multi-paradigm）的编程语言，设计初衷是要集成面向对象编程和函数式编程的各种特性。Scala 运行在Java虚拟机上，并兼容现有的Java程序。Scala 源代码被编译成Java字节码，所以它可以运行于JVM之上，并可以调用现有的Java类库。(百度百科）</li></ul></li><li>实验步骤：<ul><li>使用的工具：<ul><li>scala meta : <a href="https://scalameta.org/" target="_blank" rel="noopener">https://scalameta.org/</a></li><li>Intellij Idea: <a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">https://www.jetbrains.com/idea/</a></li></ul></li><li>借助的参考资料：<ul><li>scala meta的示例程序</li><li>浏览器 构造 scala AST 树：<a href="https://astexplorer.net/#/gist/22cf8a3fcb2155c087ae94b4d194c1b6/d10c646ecfae4c69c919408aa3aaefb2deda2df7" target="_blank" rel="noopener">https://astexplorer.net/#/gist/22cf8a3fcb2155c087ae94b4d194c1b6/d10c646ecfae4c69c919408aa3aaefb2deda2df7</a></li></ul></li><li>实验带代码：<br>  查看 scala meta 源程序可以发现 ，该工具里面有一个Tree的类，该类有children 属性和parent属性：<img src="https://i.loli.net/2018/06/08/5b1a5c0fda8dd.png" alt="图片描述"><br>  所以可以根据这个类来进行遍历得到我们需要的叶子节点的数据，在这里我采用visitor的方式来进行遍历。主要的遍历的对象有以下几个：<br>  <img src="https://i.loli.net/2018/06/08/5b1a5cab0871e.png" alt="图片描述"><br>  分别代表Scala中的各个语法，这里在做的时候出现了几个问题。一个是Term.param和Type.param 需要“精准的查找”，不能像其他的Term.Name,Term.Annonate那样，可以通过Term来进行查找：<img src="https://i.loli.net/2018/06/08/5b1a5dc5f0c91.png" alt="标题"><br>  也就是说其他的Term里面的属性可以通过遍历Term然后再进行查找，但是这个Term.param必须在第一次遍历的时候就指出来，难道Term.param不属于Term?很奇怪。以后再查一查。</li><li>代码的逻辑并不难，下面就开始打印叶子节点，通过观察浏览器AST解析器<a href="https://astexplorer.net/#/gist/22cf8a3fcb2155c087ae94b4d194c1b6/d10c646ecfae4c69c919408aa3aaefb2deda2df7发现：叶子节点主要在以下几个地方打印：" target="_blank" rel="noopener">https://astexplorer.net/#/gist/22cf8a3fcb2155c087ae94b4d194c1b6/d10c646ecfae4c69c919408aa3aaefb2deda2df7发现：叶子节点主要在以下几个地方打印：</a><br><img src="https://i.loli.net/2018/06/08/5b1a5f3dcd9de.png" alt="图片描述">基本数据类型<br><img src="https://i.loli.net/2018/06/08/5b1a5f81f12ba.png" alt="图片描述">Term.Name处<img src="https://i.loli.net/2018/06/08/5b1a5fb82699e.png" alt="图片描述">Type.Name 处</li></ul></li><li>实验的最终结果：<ul><li><img src="https://i.loli.net/2018/06/08/5b1a6012ac69a.png" alt="图片描述">Scala 源代码</li><li><img src="https://i.loli.net/2018/06/08/5b1a604443ddf.png" alt="图片描述"> 提取的叶子节点</li><li><img src="https://i.loli.net/2018/06/08/5b1a609ceb152.png" alt="图片描述"> 源代码</li><li><img src="https://i.loli.net/2018/06/08/5b1a60d3a65f9.png" alt="图片描述"> 提取的叶子节点</li></ul></li><li>总结：实验结果还未仔细观察，具体的细节有待改进，还有就是上次说的将string值改成<string>等基本数据的转化还未加入。</string></li></ul><p>本博客持续更新。</p>]]></content>
      
      <categories>
          
          <category> Scala </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AST </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>日记</title>
      <link href="/2018/06/06/daily1/"/>
      <url>/2018/06/06/daily1/</url>
      <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read.</h3><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" password " /> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div>]]></content>
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>软件工程复习提纲</title>
      <link href="/2018/06/01/software-review/"/>
      <url>/2018/06/01/software-review/</url>
      <content type="html"><![CDATA[<p>本博客是根据软件工程最后一节重点课总结的内容，对软件工程的知识进行了简单的梳理</p><h3 id="软件工程简述"><a href="#软件工程简述" class="headerlink" title="软件工程简述"></a>软件工程简述</h3><ul><li>软件工程定义：<ul><li>软件工程是研究应用如何以系统性的、规范化的、可定量的过程化方法</li><li>去开发和维护软件，</li><li>以及如何把经过时间考验而证明正确的管理技术和当前能够得到的最好的技术结合起来</li></ul></li></ul>]]></content>
      
      <categories>
          
          <category> 学科复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
