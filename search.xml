<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[简单克隆代码检测(函数式语言简略分析)]]></title>
    <url>%2F2018%2F07%2F13%2Fexperment10%2F</url>
    <content type="text"><![CDATA[本博客主要对scala 函数式语言及其二进制代码进行分析，讨论第四种类型代码克隆的检测方法。 函数式编程简介：函数式编程是种编程方式，它将电脑运算视为函数的计算。函数编程语言最重要的基础是λ演算（lambda calculus），而且λ演算的函数可以接受函数当作输入（参数）和输出（返回值）。 和指令式编程相比，函数式编程强调函数的计算比指令的执行重要。 和过程化编程相比，函数式编程里函数的计算可随时调用。 本文所做的主要实验 提取spark源码的所有相关的函数式语言。 通过观察发现函数式语言比较短小，而且大多数会在def函数里面使用，当做一条子语句。 通过javap语句来获取class文件的相应的指令 发现基本上函数式语言会自动生成一个单独的class文件 示例函数 但是那么多的函数式语言我不能判断哪个函数式语言和哪个函数是相似的，所以我自己写了一个示例函数，编译，然后观察生成的二进制代码； 发现这两个是完全一样的。如果通过representation1和representation2来对这两个函数进行判断是无法判断的，但是通过二进制就可以判断这两个函数是相通的，所以bytecode在第四种类型的克隆中有非常大的作用。 Type IV类型的克隆的示例 scala源代码 提取的指令 一模一样 不一样]]></content>
      <categories>
        <category>Scala</category>
      </categories>
      <tags>
        <tag>clone_detection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[雅思阅读知识点]]></title>
    <url>%2F2018%2F07%2F11%2Fyasi2%2F</url>
    <content type="text"><![CDATA[定位词 决定答案位置的词语，（原文中45句话解决40道题，效率阅读） 依据：讲究实证，一一对应 要求：根据考点做题，拒绝推测猜 定位词标记方法 (在题干中标记) 数字(温度，时间，百分比)，大写字母(地点，人名，专有名词)，原文当中第一次出现的地方 特殊名词(90%,实意名词，最重要的名词是主语最左边的词，如果是实意名词就直接标记，如果是抽象名词，就看从句主语。顺序，主语，从句主语，句末主语)》特殊动词(10%)》特殊形容词或副词(如果名词前有形容词，要一起画下来，画最近的形容词) (70%的情况下，定位词原词重现) 常见词(water,parper,tree)，文章主旨词(正文标题出现的词)，题干内部重复出现的词，皆不适合做定位词 判断题特点 题目多变Yes,NO,NOT GIVENTRUE,FALSE,NOT GIVENYes,yes,Y 三种答案数量有规律True(42%)&gt;=False(38%)&gt;Not Given(20%) (80%是这种概率)3=1,1,14=2,1,15=2,2,16=3,2,1 2,2,2 顺序出现1 BATS2 WTO Y 同时定位两题判断题 两个两个找 考点词 仅出现在判断题中 考官的出题点所在的位置 考点词分类 是非考点词 判断题题干当中，be，can后面的部分，通常为考点 程度考点词 判断题题干中的程度描述，一定为考点 only,all,est 比较考点词 A 与 B 作比较，A,B为定位词，两者之间的关系为考点词 考察一致性 数字，时间，地点 如果判断题题干中有数字出现，先勾画该数字，在勾画一个名词，两者同时在原文当中做扫读。1900 年是20世纪初]]></content>
      <categories>
        <category>雅思</category>
      </categories>
      <tags>
        <tag>阅读</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简单克隆代码检测(实验数据对比)]]></title>
    <url>%2F2018%2F07%2F11%2Fexperment9%2F</url>
    <content type="text"><![CDATA[本博客主要是对上星期统计的数据不正常现象做对比实验，观察最终结果。 matlab 版本 representation representation 1 representation 2 得到的克隆对数 123 324 通过人工统计，共发现3对representation1里面的克隆对，未在 representation2中出现。 截图： 通过比较发现，这种情况是很有可能发生的，虽然他们的identifiers全部是一样的(private,protected不属于identifier),但是他们的语句(statement),就是不一样，少了一个或者两个语句，并且()和{}所表示的语句也不是一样，这就造成了我们之前出现的错误。经过统计发现这是一个正常的现象。 python 版本阈值： 1e-16 representation representation 1 representation 2 得到的克隆对 125 452 阈值： 0 representation representation 1 representation 2 得到的克隆对 124 408 通过比较观察，当阈值为0的时候python版本比matlab版本representation 1多了一个样本： 由一个函数构成的一个list,里面大概有四五十个字符串，而且每个字符串的内容不一致。我们查看一下我们提取的representation 1的数据： 里面就只有一个词不相同，在matlab版本里面是不认为这个是相似的，但在python版本里面认为是相似的，我感觉只要是在word embedding 和 sentence embedding 的时候框架的精确度不一致，因为参数我都设置为相同的。 当阈值为1e-16的时候，多了两条数据，一条就是上面说的那个list,另一条是 也是一个词不一样(属于Type III),导致结果多了两个。 再对representation 2的结果进行分析，大多数增加的数据都属于第三种类型，就是增加或者删除一条语句，特征表现上为增加或者删除一个词。 实验总结 representation 1提取出来的克隆对未出现在representation 2中属于正常现象 matlab版本框架要更加严苛,只要有一个词不同就认为是不同的，相对而言，python版本的代码能够提出较多的第三种类型的克隆 还有，要感谢何学弟帮忙查看数据，以及写相应的工具代码。]]></content>
      <categories>
        <category>Scala</category>
      </categories>
      <tags>
        <tag>clone_detection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简单代码克隆检测七(数据分析)]]></title>
    <url>%2F2018%2F07%2F06%2Fexperment8%2F</url>
    <content type="text"><![CDATA[本博客主要对跑出来的clone对进行打标签和统计数据 提取克隆对源代码上次开会的吴老师建议我们用代码根据id来查找源代码，我感觉很有道理，人工筛选的话费时费力，随意我直接在原来的提取AST node的代码上加了根据id查找源代码的功能。 最终的提取的数据类似于： 对提取的克隆代码进行打标签这里我们找了三个人负责为每个克隆对打标签，这里要感谢何学弟、段学妹、浦帆的帮忙，打的标签的标准是根据论文中的克隆的四中类型判断标准进行，用1,2,3,4分别代表类型1，2，3，4。0代表该克隆对不属于克隆，最后根据投票制选出我们认为最终的克隆类型，我主要负责统计representation1提取的代码对和representation2提取的代码对的交集和差异集。打标签的数据 数据统计 Project Type I Type II Type III Type IV code 13 93 89 0 spark 106 176 71 5 code:|Representations|Type I|Type II|Type III|Type IV||:-:|:-:|:-:|:-:|:-:|:-:||Representation1|14|6|4|1||Representation2|13|93|89|0| representation 1 提取的克隆对 并不是都是 Type1的，而且按理说representation2提取的克隆对应该包括所有的representation1提取的数据，但是code里面有两个没有识别出来，spark里面有6个没有识别出来，而且还是Type 1,对与这个结果还需要详细的分析。]]></content>
      <categories>
        <category>Scala</category>
      </categories>
      <tags>
        <tag>clone_detection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算机网络复习提纲]]></title>
    <url>%2F2018%2F07%2F04%2Fjiwangfuxi%2F</url>
    <content type="text"><![CDATA[本博客对计算机网络的基础知识进行了简单的梳理 应用层应用层协议原理 网络应用是计算机网络存在的一个理由。 网络应用有：基于文本的：email, 远程访问计算机，；基于万维网的：web冲浪，VoIP,IP视频会议（如Skype）；用户生成的视频分布：YouTube；网络游戏等。 创建一个network app: 一般是在端系统上创建因特网应用，应用可以运行在不同的端系统中，并通过网络进行通信，例如web服务器和web浏览器应用的互相通信。通常不在位于网络核心的设备上创建应用，对于路由器和链路层交换机来说，它们值负责实现了底层的协议，并不运行应用层。端系统上运行的应用程序可以快速开发、传播 应用体系结构（application architecture）主要有client-server architecture(客户-服务器体系结构)和P2P architecture(点到点对等结构)，还有混合体系结构（混合C/S和P2P）的体系结构 Client-server architectureServer:服务器总是一直运行在主机上；有固定的周知的IP地址，例如web服务器为web浏览器提供服务Client: 客户端之间不直接通信，例如两个web浏览器之间不直接通信，客户总是能通过向服务器发送分组来与其联系，可能是间断的通信，可能有动态的IP地址。这种结构中，一台服务器通常会应对多个客户，为了避免服务器不堪重负，会配备大量的数据中心，这些数据中心用于创建强大的虚拟服务器，例如搜索引擎。服务商通常需要支付大额的互联和带宽的费用来收发数据中心的数据。 Pure P2P不是always-on server的模式，应用程序可在可以间断通信的主机之间直接通信，这些主机被称为对等方。不依赖数据中心的专用服务器，对等方为用户控制的桌面机这而不是服务商提供。对等方之间通信不必通过专门的服务器，这种体系结构被称为对等体系结构。P2P模式有很好的自扩展性（scalability），例如在P2P的文件共享系统中，每个主机都由于请求文件产生工作量，又因为分发邮件为系统增加服务能力。它们通常不需要庞大的服务器基础设施和带宽，因此相比于C/S模式中为互联、带宽花费的费用来说，P2P是成本有效的。未来P2P的巨大挑战： ISP友好。大多数住宅ISP已经受制于“非对称”带宽应用，下载比上次要多很多，P2P的方式改变了从服务商到住宅ISP的上载流量，给ISP带来了巨大的压力。 安全性。因为高度分布和开放的特点，给安全带来挑战 激励。未来P2P应用的发展也取决于能否说服用户自愿提供带宽、存储和计算资源。 混合的体系结构某些应用程序采用混合体系结构，结合了C/S和P2P结构的元素。服务器用于跟踪地址，客户机和客户机之间通过P2P方式直接通信。在即时通讯中，用户之间P2P方式通信，集中式服务器用于查找IP（客户上网时需要用IP地址注册到服务器，客户也可以向服务器查找其他客户的IP地址）；Skype也是这样，用集中服务器查找对方的地址，客户之间之直接通信。 进程通信（Processes communicating） 进程是运行在主机上的程序。 在同一个主机上的两个进程通信称为进程间通信（inter-process communication），由端系统上的OS来确定。在不同主机上的两个进程通信是通过跨越计算机网络交换报文（message），是网络间进程通信。 网络应用程序由成对的进程对组成，这些进程对通过网络互相发送报文。 客户进程和服务进程的划分：在给定的一对进程的通信会话场景中，发起通信（即在该会话开始时发起与其它进程联系）的进程为客户端，在会话开始时等待联系的进程为服务端。 在P2P模式下，一个进程既可以作为服务进程又可以作为客户进程，即使如此，在特定场景下，也能区分该进程的具体角色。 Socket多数应用程序由通信进程对组成，进程通过socket（套接字）的软件接口向网络发送报文和从网络中接收报文。即：通过将报文发送到套接字来实现网络进程间通信。套接字socket也被成为是应用程序和网络之间（事实上是应用层和传输层之间）的应用程序编程接口（API）。在应用程序编程的过程中，开发者对于运输层的控制仅限于：1）选择运输层协议；2）设定几个运输层参数（最大缓存、最长报文长度等）。 进程寻址（addressing processes）向特定的目的地发送消息还需要知道目的地的标识。为了标识接收进程，需要定义两种信息：1）主机的地址；2）定义在目的主机上的进程的标识符。标识符由IP地址和端口号共同组成。因为主机可由ip来标识，但是主机上可以运行各种应用，要标识这些应用程序还需要加上端口号。例如web服务器的端口号为80，SMTP邮件服务器的端口号为25. 应用层协议定义了 消息的类型（是request还是response），消息语法（消息中的字段和字段是如何划分的），消息语义（信息在字段中的含义），有关进程何时以及如何发送或者接收消息的规则。公共的应用协议如：HTTP,SMTP专有的应用协议如：Skype 应用需要的传输层协议提供服务有哪些服务要求：可靠数据传输（关于数据丢失data loss问题）、吞吐量（throughout）、定时（timing）、安全（security）可靠数据传输：很多应用不能容忍数据丢失，如果一个协议提供了确保数据交付服务，则被认为是可靠数据传输。传输层能够潜在地向应用程序提供进程到进程间的可靠数据传输（疑问：这样说的意思是应用层都是可靠数据传输吗？）吞吐量：在进程会话的场景中，可用吞吐量即为发送进程能够向接收进程交付比特的速率，该吞吐量会随着时间波动。运输层协议能够以某种速率提供确保的可用吞吐量。具有吞吐量要求的程序被称为带宽敏感程序。带宽敏感的应用程序具有特定的带宽需求，而弹性应用则可以根据情况好好利用可使用的吞吐量。 定时：运输层协议能够通过定时保证。对于实时应用来说，会允许很小的时延，例如网络电话，如果时延过长则通话不流畅，还有多方游戏等。而对于非实时性应用来说，时延没有那么严格的要求。 安全性：运输层协议可以为应用程序提供一种或多种安全性服务，例如加密（在发送进程到传输层时进行加密，在将数据交付给接受进程之前解密）、数据完整性、断点鉴别等10） 因特网提供的运输协议TCP 服务面向连接的、可靠数据传输。包括流量控制、拥塞控制，不包括定时性、不保证最小吞吐量。有加强版TCP安全套接字层（SSL）进行数据加密来保证安全。 UDP 服务不可靠传输，不提供不必要服务的轻量级运输层服务，仅仅提供最小服务。不需要连接、不保证可靠性，没有流量控制、拥塞控制，也没有安全性保障。 TCP和UDP对定时和吞吐量都没有确切的保证，传输层并没有提供这两个量的完全保证。 TCP有关的应用层协议：SMTP, Telnet, HTTP, FTP, RTP （email, web ,文件传输等）UDP有关的应用层协议：SIP, RTP, 还有一些专用协议如Skype（网络电话）,DNS,DHCP 补充内容：事实上网络电话是采用的先UDP传输出现问题（例如被防火墙阻拦）后再用TCP传输的方式。UDP传输用于网络电话的一个重要原因是网络电话可以容忍部分的数据丢失但要求达到一定的最小速率才能有效工作，因此选用了UDP，也能避免拥塞协议。 11） 5种重要的网络应用：web，文件传输，电子邮件，目录服务，P2P 二． Web和HTTP HTTP概况1） Web的按需操作。Web的应用层协议是HTTP协议，是web的核心。HTTP由服务器程序和客户程序两个程序实现，定义了web应用层报文格式和报文交换的方式。2） 一个web page由很多对象组成，一个对象只是一个文件。例如HTML基本文件，图像文件。HTML基本文件通过URL引用其他对象，URL = 对象所属的服务器主机名（host name） + 对象的路径名（path name）3） Web客户端和服务端建立起TCP连接Web客户发出请求报文HTTP协议通过客户套接字连接到TCP通道TCP可靠数据传输通过服务端套接字给服务端服务端接收到从套接字接口得到的请求报文发送响应报文……4） HTTP协议是无状态协议，在服务端并不存储客户的状态，客户可以在短短几秒内多次请求同一个对象。使用了C/S应用体系结构。5） 非持续连接和持续连接每个请求-响应对是经过一个单独的TCP连接发送，是非持续连接多个请求-响应对都经过同一个TCP连接发送，是持续连接HTTP既可以使用非持续连接也可以使用持续连接，默认为持续连接。 对于非持续连接：每个TCP连接在服务器发送响应报文后就会关闭，即一个TCP连接只能处理一个对象，只传输一个请求报文和一个响应报文。往返时间（RTT）是指一个短分组从客户到服务器再返回客户所花费的时间。 上图可看出，对于非持续连接来说，处理一个对象就要花费2RTT+文件传输时间，每一个对象要经受两倍的RTT时延。还有一个缺点是必须为每个对象建立一个全新的TCP连接，服务端要处理TCP缓冲区和保存变量，给服务器带来了严重的负担。 对于持续连接：建立TCP连接时，服务端发出响应后就保持该TCP打开，在相同的C-S之间的进程可以通过这一条TCP连接传送。HTTP协议一般默认的是带流水线的持续连接，当一定时间TCP连接上无传送时就断开连接。 HTTP报文格式请求报文：第一行：请求行，其后继的行为首部行，首部行下面还有实体体（entity body）。请求行有3个字段，方法名、URL字段和HTTP版本。首部行中有主机名、Connection(为close时表示发送完对象后关闭连接)、用户代理（哪个浏览器）、语言等信息 实体体（entity body）：使用post时里面放的是post传递的数据，使用get方法时为空 HTTP方法：POST:网页中常包含表单form，提交表单后，要传给服务器的数据被放在了HTTP报文的entity body里GET:经常使用，from也可以不使用post方法，使用get方法，要传给服务器的数据会被放在URL后面HEAD:和get方法相似，服务器收到HEAD请求报文后会返回一个响应报文，但是不返回请求对象 HTTP版本：HTTP1.1和HTTP1.0相比，多加了PUT方法和DELETE方法，PUT方法可将实体体中的文件上传到URL字段指定的路径；DELETE方法可删除URL字段指定的文件 响应报文：包含初始状态行、首部行、实体体。初始状态行：版本+状态码+状态信息首部行：Connection(open/close)，服务器查找到该对象的时间Date，服务器Server名称、最后修改的时间Last-modified,对象大小conten-length,对象类型content-type等等（会因为产品、版本、配置不同而不同，比如有的还有cookie项） 实体体是响应报文的主要部分，它包含了被请求的对象本身。 首部行对对象缓存有很大的作用。响应报文的首部行受到浏览器类型、版本、配置这些影响而可能不同。 用户和服务器（user-server）的交互—Cookie1） Web站点使用cookie识别用户身份2） Cookie的4个组件：1. HTTP响应报文中cookie首部行；2. HTTP请求报文中cookie首部行；3. 用户端系统保留的cookie文件，由用户浏览器进行管理；4. Web站点的后端数据库3） Cookie可以标识用户身份，当用户首次访问一个web站点时，可能需要提供一个用户标识（例如用户名），在后继会话中，浏览器向服务器传递一个cookie首部行，从而向该服务器标识了用户。Cookie相当于在无状态的HTTP协议上创建了一个用户会话层。4） Cookie对用户私密性有影响，web站点可以有很多用户信息，使用时需注意。5） 附加信息：可以维持状态的方式：1. 通过多个事物维持发送者/接受者的状态； 2. HTTP消息中携带cookie Web 缓存（代理服务器）1） Web缓存又叫代理服务器（proxy server）。Web缓存器有自己的磁盘存储空间用于保存最近访问的对象副本。Web缓存器既是服务器又是客户。2） 使用web cache的访问方式：浏览器建立到web缓存的TCP连接a. 若web缓存中有该请求对象的副本，则用HTTP响应报文返回该对象; b. 若web缓存中没有该对象，则web缓存打开一个和初始服务器的TCP连接，发送请求初始服务器返回对象（包含在HTTP响应报文）web缓存在本地存储该对象的副本，然后将该对象以HTTP响应报文格式返回给浏览器。3） Web缓存的好处：a. web缓冲器可以大大减少对客户端请求的响应时间；b. web缓存器可以大大减少一个机构的接入链路到因特网的通信量。通过减少通信量，该机构不必急于增加带宽，因此降低了费用。（详细理解可见下面例子）4） 例子：左图未使用代理服务器，右图使用了代理服务器 假设接入链路连接为15Mbps（图上10），内部局域网连接为10Mbps(图上写错了)，初始服务器每秒处理15个请求，对象的平均长度为1Mb，假设路由器转发请求报文开始到收到响应报文的平均时间为2s。左图，未使用代理服务器的情况：局域网的流量强度（al1/R1）= 15 1Mbps / 100Mbps = 0.15s接入链路的流量强度 = 15 * 1Mbps / 15 Mbps = 1s 总的响应时间 = 2s + 局域网时延 + 接入链路时延流量强度接近1时，平均排队时延会非常大，局域网时延较小可忽略，但是接入链路时延太大 解决方案一：将接入链路的15MBps改成100Mbps，这样接入链路的流量强度为0.15，时延也可以忽略，总的响应时间为2s，但是这样做需要花费很多费用 解决方案二：如右图，增加一个web缓存器（代理服务器），假设有40%的请求可以在web缓存上得到响应，响应时延为0.1s，剩余60%在web缓存上未找到请求对象后直接访问初始服务器。此时经过接入链路的流量强度从1变为0.6，对应的排队时延大大降低，相对于2s可忽略。总的响应时间为 0.4 0.1 + 0.6 （2 + 0.1） &lt; 1.4 s 5） 用过内容分发网络（CDN），web缓存器在因特网中发挥着越来越重要的作用。 条件GET方法（Conditional GET）使用web缓存存在的问题：存放在web缓存中的对象副本可能是陈旧的，保存在web缓存器上的对象从该副本被缓存在客户端后可能已经被修改过。 条件GET：1）请求报文使用GET方法； 2）请求报文包含一个”If-Modified-Since”的首部行。 Web浏览器向web服务器发送请求时，web服务器先向web缓存发送响应报文（无请求对象），缓存器发送一个条件GET执行最新检查，如果没有被修改过（如304 Not Modified），则缓存器向客户端返回响应报文（包含该对象） 三． 文件传输协议：FTP FTP会话中，可以向远程主机发送文件 FTP采用的C/S模型。 使用两个并行的TCP连接来传输文件，一条是控制连接（control connection），一条是数据连接（data connection）。控制连接用于在主机间传输控制信息，例如用户标识、口令等；数据连接用于传输一个文件。控制连接的TCP连接被称为是out-of-band(带外)传送的。HTTP在传输文件时是在同一条TCP连接上发送和响应首部行的，是in-band（带内）传送。 上图中，客户端想将文件复制到远程目录，先建立一个TCP控制连接，端口为21，该控制连接发送用户标识和口令。服务器接收到一个文件传输的命令后，建立一条TCP数据连接，用于传输一个文件。每一次文件传输都需要建立一条新的数据连接。控制连接贯穿整个会话，是持续连接，数据连接是非持续连。 FTP在整个会话期间需要保留用户的状态，特别是服务器必须将特定的用户与控制连接联系起来，而HTTP是无状态的，不必追踪用户状态。 FTP报文和HTTP报文一样都采用7位的ASCII编码便于人类阅读。FTP请求报文以命令 + 参数的方式显示。例如在控制连接上的USER username和RETR filename（该报文使得远程主机发起一个数据连接），然后数据连接上的STOR filename（远程存放文件）。响应报文是回答（如331） + 其他信息（状态码+状态信息） 四． 因特网中的电子邮件 因特网电子邮件的三个主要组成部分：1.用户代理（user agent）2.邮件服务器（mail server）3.简单邮件传输协议（SMTP）。用户代理可以进行读取邮件、编辑、回复、转发这些操作。邮件服务器形成了电子邮件体系结构的核心。邮件服务器上有邮箱（mailbox），维护和管理着发送给用户的邮件。有一个报文队列（message queue），当对方服务器无法接收文件时，先将要发送的文件保存在报文队列中，隔一段时间再次发送，若经过一段时间还是不能被接收，则从message queue中删除。SMTP是因特网电子邮件中主要的应用层协议。是因特网电子邮件应用的核心。 SMTP有两个部分，运行在发送方邮件服务器上的客户端和运行在接收方服务器上的服务端。每一台服务器既运行SMTP客户端也运行SMTP服务端。 SMTPSMTP使用TCP传输，将邮件从发送方服务器发送到接收方服务器，端口为25。使用7位的ASCII码。 使用SMTP协议发送邮件的操作：调用发送方的用户代理程序并提供接收方的地址等信息用户代理将报文发送给发送方的邮件服务器，被放入报文队列中，发送方邮件服务器创建一条TCP连接经过初始SMTP握手之后接收方邮件服务器接收报文，将报文放入邮箱中接收方调用用户代理查看邮件。 图中3是报文队列，5是指邮箱，4是SMTPSMTP主要完成3个功能：握手建立连接消息传递关闭连接从上面描述中可以看出，SMTP不使用中间服务器发送、接收邮件SMTP客户端和服务器交换报文，每个报文以回车和换行结束（CRLF），服务器对报文中的每个命令做出应答。SMTP一般使用持续连接，通过一个TCP连接发送所有的报文 SMTP和HTTP的对比：HTTP是一个拉协议（pull），客户从服务器拉取信息，SMTP是推协议（push），发送方服务器将邮件推给接收方服务器，特别是，这个TCP连接是由发送该文件的机器发起的；HTTP把每个对象封装在它自己的报文中，而SMTP把所有报文对象封装在一个报文中。 邮件格式和MIME: 邮件相关的环境信息放在首部行中，必须要有From:首部行和一个To:首部行。这些是邮件报文自身的一部分，不要和上面SMTP握手协议传送的报文弄混了。邮件报文的首部行（header）和报文体（body）之间用空行隔开 邮件访问协议邮件访问使用了C/S体系结构。SMTP协议其实还有一些问题，例如因为SMTP是一个推协议，所以用户代理无法使用SMTP取回发送的邮件。可以有一些特殊的邮件访问协议解决这个问题，例如 第三版的邮局协议（POP3），因特网邮件访问协议（IMAP），还有HTTP协议（gamil,Hotmail,yahoo!mail等） 1） POP3协议POP3协议是简单的邮件访问协议，主要有3个阶段的工作，authorization(确认阶段或者认证阶段)transaction（事务处理）update（更新） Authorization（认证阶段）：输入用户名、密码进行认证Transaction（事务处理）：用户代理取回报文，用户代理在此时还可以对邮件做删除标记（此时邮件服务器还未删除这些邮件）Update（更新阶段）：客户发出quit命令后，邮件服务器删除那些有删除标记的邮件，结束对话。 事务处理过程，服务器对客户端的每条命令做出应答，正确为+OK，出错为-ERR POP3协议用户可选择两种模式：“下载并删除”和“下载并保留”下载并删除（download and delete）：从一个PC的用户代理下载服务器邮件之后删除邮件，在其他PC上不能重新读取邮件下载并保留（download and keep）：可以在不同的PC客户端读取邮件。 2） IMAP协议将所有的邮件都保存在服务器，服务器把每个报文和一个文件夹联系起来。 IMAP协议为用户提供了创建邮件文件夹、移动邮件文件夹、在远程文件夹中查询邮件的命令，而POP3没有 IMAP的一个重要特性是它允许用户代理获取报文的组件。例如提供了获取报文首部行的命令，方便用户查询邮件而不必全部取回。 与POP3相比，IMAP协议具有更多的特色（以上几点），也比POP3复杂得多。 3） 基于Web的电子邮件使用HTTP协议，用户代理是浏览器。访问邮件是从邮件服务器提取到浏览器。但是与其它邮件服务器发收邮件还是使用的SMTP协议。 五． DNS : 因特网的目录服务 主机的一种标识方式是它的主机名，还可以使用IP地址进行标识。主机名方便人类使用，路由器更喜欢IP地址。因此DNS就提供了一种主机名到IP地址转换的目录服务，这是DNS的主要任务。 DNS是：1）由分层的DNS服务器实现的分布式数据库； 2）一个能使主机查询分布式数据库的应用层协议。 DNS是应用层协议，采用了C/S模式，其核心功能是将主机转换为其背后的IP地址。DNS通常被其他应用层协议所使用，例如被HTTP、SMTP、FTP协议使用。当web浏览器发送请求URL时，浏览器先抽取出主机名，通过DNS客户端发送一个包含主机名的请求到DNS服务器，DNS服务器找到可以对应的IP地址之后返回应答报文给DNS客户端，这个报文中就含有IP地址，然后浏览器再根据这个IP地址建立TCP连接…… DNS还提供了一些其他的重要服务：主机别名：相比于规范主机名，更容易记忆邮件服务器别名：使得邮件地址好记忆负载分配：一些繁忙的站点（如cnn.com）被冗余分布在多台服务器上，每台服务器运行在不同的端系统，有不同的IP地址，这些为cnn.com准备的IP地址集合，都与一个规范主机名（cnn.com的规范主机名）联系起来。客户总是向IP地址排在最前面的服务器发出请求，此时其他服务器就相对冗余，DNS就在这些冗余的web服务器之间循环分配了循环冗余负载。 DNS工作原理概述从用户的角度来看，DNS是一个提供了简单的转换服务的黑盒子，事实上这个黑盒子是由分布于全球的大量的DNS服务器以及定义了DNS服务器与查询主机通信方式的应用层协议组成。 DNS如果采用简单的集中式设计，即只有一个DNS服务器，将会存在很多问题，例如容易出现单点故障、通信容量过大、远距离的集中式数据库查询导致时延、难以维护这些问题。因此采用了分布式设计 分布式、层次数据库DNS使用了大量的DNS服务器，它们以层次的方式组织，分布在全球范围大致来说，有3种类型的DNS服务器：根DNS服务器，顶级（top-level domain）域DNS服务器，权威（authoritative）DNS服务器。以客户端请求www.amazon.com为例，主要是这3步：Client向根域名DNS服务器请求找到com的DNS服务器Client向com的DNS服务器请求找到amazon.com的DNS服务器Client向amazon.com的DNS服务器请求找到www.amazon.com的IP地址 根DNS服务器：因特网上有13个跟DNS服务器，每个都视为单个的服务器，事实上是一个“冗余”的服务器网络 顶级域DNS服务器（TLD）：这些服务器负责一些顶级域名（如com,org,net,edu）以及一些国家的顶级域名（如uk,fr,ca,jp） 权威DNS服务器：通常为一些组织机构的服务器，为这些组织机构提供主机名对应的IP地址，组织或者一些大学、公司自己进行维护。 此外还有一类DNS服务器，叫本地DNS服务器，严格讲不属于DNS服务器的层次结构。每个ISP例如一个公司、一个居民区，都有自己的本地DNS服务器。在主机进行DNS查询时，查询被发送到本地DNS服务器，本地DNS服务器充当代理，将请求转发到上面的层次结构。 图a上图中1属于递归查询，2、4、6属于迭代查询，因为从本地主机到本地DNS服务器的查询请求是本地DNS服务器以自己的名义获得映射。2、4、6所有的回答都直接给了本地DNS服务器任何查询都可以是迭代的也可以是递归的。如下图，所有查询都是递归的。 图bDNS缓存原因：为了改善时延性能并且减少在因特网传递的DNS报文数量，DNS广泛采用了缓存技术 原理：在一个请求链中，一个DNS服务器能够将回答中的信息缓存在本地存储器中。 例如从主机cis.poly.edu查询gaia.cs.umass.edu时，cis.poly.edu先向本地DNS服务器发出请求，参照上图a，一次查询之后，本地DNS服务器，dns.poly.edu可以缓存对应的主机-ip地址对，几小时后再次查询时，主机直接从dns.poly.edu中找到ip地址而不需要再向DNS层次结构发出请求。而且dns.poly.edu还可以缓存TLD服务器的ip地址从而绕过根DNS服务器查询。 由于主机-主机名的映射不是永久的，DNS服务器也会在一段时间后清除缓存 DNS记录实现了DNS分布式数据库的所有的DNS服务器存储了资源记录（RR , Resource Record）,RR提供了从主机到IP地址的映射。资源记录是一个四元组（name,value,type,TTL） TTL是该记录的生存时间，它决定了资源记录应当从缓存中删除的时间。 Type = A name是主机名，value是对应的IP地址，例如（relay1.bar.foo.com, 145.37.93.126, A） Type = NS name 是域名，value是能够获取到该域名的权威服务器的主机名，例如（foo.com, dns.foo.com, NS） Type = CNAME name是主机别名，value是对应的规范主机名 Type = MX name是 邮件服务器别名，value是对应的规范主机名 DNS报文DNS有两种报文，查询报文和回答报文，报文格式相同首部有12个字节，标志是0表示为查询报文，1则是回答报文主要有查询、应答、权威、附加这几个部分。 在DNS数据库中插入记录，一般是想注册登记机构（registrar）申请注册域名。]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>学科复习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数复习]]></title>
    <url>%2F2018%2F06%2F30%2Fxianxingdaishu%2F</url>
    <content type="text"><![CDATA[Please enter the password to read. U2FsdGVkX1+cENyoVf9NAij/ktB94gwpK/m8jfkE/zc=]]></content>
      <categories>
        <category>学科复习</category>
      </categories>
      <tags>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构复习]]></title>
    <url>%2F2018%2F06%2F30%2Fshujujiegou%2F</url>
    <content type="text"><![CDATA[Please enter the password to read. ]]></content>
      <categories>
        <category>学科复习</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简单代码克隆代码检测(六)(克隆工具第一版本)]]></title>
    <url>%2F2018%2F06%2F29%2Fexperment7%2F</url>
    <content type="text"><![CDATA[本文主要介绍根据前几次的实验，编写、整合一个用于检测scala代码克隆的工具，目前只是第一版本。 实验简述通过前几期的博客我已经知道了检测代码克隆的具体流程，基本上分以下几步，从源代码提取词-&gt;word embedding-&gt;sentence embedding-&gt;统计句子向量之间的距离-&gt;筛选出距离小于某个值的克隆对。之前参考的实验只提供了从word embedding到统计句子向量之间的距离的部分代码，而且使用的是matlab代码，所以我想把所有的流程整合到一起，尽量用同一种语言进行实现。 将提取特征的scala代码打成jar包将之前写的提取scala的代码打成jar方便使用，具体的流程参考链接： https://blog.csdn.net/freecrystal_alex/article/details/78296851之后在命令行试验了一下，居然出错了，在编译器里好好的，查看了一下错误网上说是文件读取的问题，读取的文件里面有中文字符抛出异常，尝试了网上说的几个方法，最终是加了一行代码解决这个问题最终jar执行无误：jar包的输入参数有两个，一个是-leafor-path对应的是提取第一个还是第二个representation,第二个参数是项目的绝对路径，输出的是两个txt文件，一个是提取的特征，用于实验，另一个是每个特征对应scala文件的目录，方便查找对应的源代码。 修改word embedding代码之前word embedding 是直接调用源码来实现，需要到linux系统中，先make，再调用，比较麻烦，我直接问赵俐俐学姐要了之前做实验的python的代码，基本上实现了word embedding这个部分的功能。 修改autoencode代码之前的autoencode的代码是用matlab写的，我想把它转换成python语言，在github上搜了一下，有两个版本，一个是java版本，论文原作者写的： https://github.com/sancha/jrae另一个是python版本的，是清华的一个博士生在2014年写的： https://github.com/pengli09/str2vec为了方便与word embedding 整合，我选择了python版本的autoencoders 。接下来就是漫长的~配置环境的过程，在代码的主页上给出了代码所需的库，其他的都能够在服务器上简单进行配置(linux),但是就是openmpi这个包，一直出错，整了好久，都没有成功，而且我用的还是腾讯云的服务器，很卡很慢，所以就决定直接在本地的windows系统进行试验，参照博客将整个环境配置好了： https://blog.csdn.net/mengmengz07/article/details/70174905 统计相似的克隆代码上面说的python版本的autoencode最终输出的是一个句子的向量，没有给出具体的距离矩阵和相似代码的id，所以就修改了一下内部代码，利用python spicy 包里的函数生成了距离矩阵，并统计了距离小于1e-16的代码对。 程序的运行时间像提取数据和word embedding的运行时间都比较短，可以不用担心，主要是这个autoencode运行时间很长，我在本地上跑，5000条样本，87条词向量，最大迭代为2次 运行的时间大概在35分钟左右，对比matlab来说短了一点点，并没有变的非常快，可能是我机子本身性能的问题。还有就是，论文中推荐迭代次数最好在100到200之间，我们现在2次迭代就那么长时间，感觉之后的时间会更长。这个问题有待解决。 工具使用说明：项目结构截图： 运行 jar包 提取 representationjava -jar scala_parser.jar -path\-leaf {file_path}将生成的 sample-training-file.txt 文件放到input文件夹下 执行 run_word2vec.sh./run_word2vec.sh 这里没有参数进行输入，我把参数都写在.sh文件里面，之后修改可以在.sh文件中进行修改，一共三个参数，输入文件、输出文件、embedding size 执行 mpi-train.sh./mpi-train.sh {coreNum}这里需要输入一个coreNum参数，意思是使用电脑里面核的个数 执行 compute-vector.sh./compute-vector.sh 最终的结果文件最终会在output文件夹中生成一个sample-training-file.vec.txt文件 ，里面是相似代码的id，跟之前我们第一步生成的sourceName.txt文件中的行数进行对比，查找源文件中的代码，(注意因为id是从0开始的，所以对应的行数为实际的行数减1)]]></content>
      <categories>
        <category>Scala</category>
      </categories>
      <tags>
        <tag>clone_detection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《DeepLearning Similarities from Different Representations of SourceCode》阅读笔记]]></title>
    <url>%2F2018%2F06%2F26%2Fpaper1%2F</url>
    <content type="text"><![CDATA[原文链接： http://www.cs.wm.edu/~mtufano/publications/C9.pdf作者：Michele Tufano，Cody Watson，Gabriele Bavota，Massimiliano Di Penta，Martin White，Denys Poshyvanyk文章来源： MSR 2018简介： 本文针对代码克隆检测，提出了基于Deep Learning自动学习代码相似性的方法，在混合四个representation的代码克隆检测中取得了较好的结果。 研究概况研究背景源代码分析是许多软件工程任务的坚实基础。源代码分析方法依赖于许多不同的代码表示，例如源代码中的标识符、注释、抽象语法树、控制流图、数据流、字节码等，代码表示提供了不同的抽象级别，这些抽象级别在源代码之间创建了显式和隐式的关系。现有的克隆检测方法利用基于手动指定特征集合的算法，例如：基于文本的、基于字符串的、基于token的、基于AST的、基于图形的和基于词典的等等。 前人工作和不足事实上已经有很多人使用DL来替代手动特征工程进行软件工程相关的研究(不局限于代码克隆检测)，例如： 通过递归循环编码器进行representation的学习以实现代码克隆检测： 将源代码用标识符流和语法类型进行表示，提取出representation。 基于DL和IR（Information Retrieval）的错误定位：利用IR技术自动提取文本相似性特征，之后神经网络通过学习将bug和token进行关联。 基于Deep Belief Network(深度信任网络)的缺陷检测：使用DBN从AST中提取token vector,用来学习语义特征进而进行缺陷检测。对于以上的工作来说，他们可以说是特征的选择都是根据软件工程研究人员或者这个领域的专家的直观的感觉或者经验来选取的，而且这些方法都需要大量的数据集的支持。 我们的工作在本文中，我们提出了一个基本问题，底层的代码表示是否能成功应用于自动学习代码相似性。然后在我们的方法中，我们使用了identifier,AST,CFG,bytecode四个representation来表示代码，进而通过DL来检测代码的相似性。而且，我们还研究了模型的组合是否优于单个模型的性能，实验结果符合我们的预期，组合模型提供了更加全面的代码表示，性能要更好。 具体细节过程简介我们的方法可以概括如下。 首先，以我们希望分析的不同粒度（例如，类，方法）选择代码片段。 接下来，对于每个选定的片段，我们提取其四种不同的表示（即标识符，AST，字节码和CFG）。 代码片段被嵌入为连续值矢量(continuous valued vectors)。为了检测相似的代码片段，在嵌入(embeddings)之间计算距离。 提取representation给定一个项目，统计所有的.java和.class文件，对于java文件利用Eclipse中的JDT工具构造语法树，采用visitor模式来遍历所有的节点，选择所有的类或者方法，同时我们丢弃了接口和抽象类，分析他们没有什么意义，同时过滤掉小于10个语句的代码。 identifiers: 通过遍历语法树的叶子节点的值来提取特征，同时将常量分别用&lt;int&gt;,&lt;float&gt;,&lt;char&gt;,&lt;string&gt;等值进行代替。 AST: 通过遍历语法树中的中间节点来提取所有的语句类型，这里我们删除了SimpleName 和QualifiedName两个节点，第一，前面的representation已经包含了这个特征，第二提取的语句中这两条语句过多，影响最终的实验效果。 CFG： 通过soot工具提取class文件中类或者方法的控制流特征。 bytecode，通过java自带的反编译工具javap来提取class文件中的字节码特征，同时，我们只保留指令的名称，对于指令后面的数字所代表的的含义进行了忽略。 Deep Learning 进行学习采用两种策略来学习嵌入(embedding）表示，对于标识符、AST、bytecode我们采用基于DL的方法，对于CFG我们采用Graph embedding技术。 DL 策略： 分为两步，第一步用RtNN进行Word Embedding的学习，第二步是用Recursive Autoencoder（http://ai.stanford.edu/~ang/papers/emnlp11-RecursiveAutoencodersSentimentDistributions.pdf）进行句子`embedding`的学习： Graph Embedding 策略： 为了生成用于CFG表示的嵌入，我们使用图嵌入技术HOPE（High-Order Proximity preserved Embedding）。 HOPE学习两个嵌入向量;源矢量和每个顶点的目标矢量。然后根据边的权重和它们的性质（源或目标）为这些矢量分配值。 例如，考虑图2中的图。每个实线边是有向边，虚线边捕捉图的非对称传递性。为v1创建的矢量作为目标矢量将为0，因为没有路径将v1指定为其目标。但是，分配给v5目标矢量的值会更高，因为许多路径以v5作为其目标结束。HOPE通过每个顶点的奇异值分解创建和学习图的嵌入。 然后，通过对节点嵌入进行均值汇聚，可以生成整个图的单个嵌入。https://github.com/palash1992/GEM 探索相似性通过统计每个representation生成出来的距离矩阵，并根据相应的阈值来探索代码克隆 组合模型利用集合学习技术来将每个单独的representation学习出来的距离进行组合。最常用的集合学习技术就是求一些代数表达式(总和、平均值、乘积、中值等)，例如加权平均和：另一种方法就是采用投票的方法。也可以采用随机森林的方法对结果进行统计。 实验设计该实验的目的是调查是否可以从不同类型的程序表示中学习源代码相似性，目的是了解是否可以组合不同的表示形式以获得更好的结果，或者在某些表示形式不可用时使用替代表示形式。 更具体地说，该研究旨在回答以下研究问题（RQ）： 在检测相似的代码片段时，不同的表示法(representation)是否有效 不同的representation之间是否存在互补 组合模型是否有效 DL模型适用于检测不同项目中的克隆吗？ 训练有素的基于DL的模型可以重用于以前不可见的不同项目吗？ 数据集选择两个数据集，第一个是十个开源的java项目（from the Qualitas.class Corpus），第二个是46个开源的java Libraries(from the Apache commons libraries). 实验过程和数据分析RQ1:How effective are different representations in detecting similar code fragments?将每个提取的representation的特征进行embedding,其中Identifiers,AST,bytecode的embedding size为300，CFG的embedding size为4.得到距离矩阵之后，我们对类级和方法级的克隆进行判断，阈值为:我们将每个representation得到的克隆对取并集，并对每个克隆对进行分析，分析他们的representation判断的是否正确，一个克隆对对应着四个判断依据，例如TFFF说明只有identifier第一个特征跑出来的结果说明该克隆是一个克隆对。 所以一共有15种可能的情况(FFFF不会出现)，对于每种情况，随机抽取95％置信水平和±15％置信区间的统计显着样本。接下来选择三个评估人员独立的评估样本的克隆级别，决定样本是true or false positives.获取三个评估者手动标注的数据集后，我们计算两个判断者的一致意见获得最终的数据集(例如，三个人里面有两个人认为是postive的我们就认为是positive).针对最终的数据集，我们计算了每种情况的(TTTT,TFFF等)的精确度和召回率。(true positive,false positive)。 RQ2:What is the complementarity of different representations?根据RQ1中的数据，我们计算获得的数据集中的交集和差异集.(TRi 代表的是true positive identified by representation i)接下来计算由单一表示唯一标识的克隆对的百分比，并且由representation忽略：我们还计算每对表示之间的Spearman秩相关,以调查从相同对伪像上的不同表示计算出的距离相关的程度。 RQ3:How effective are combined multi-representation models?为了回答这个问题，我们提出了两个组合模型第一个是CloneDetector,判断true positive or false positive，另一个是CloneClassifier,判断clone type(四个类型) 所使用的数据也就是RQ1中手动标记的数据。为了训练这两个模型，我们依靠随机森林采用常用的10倍交叉验证技术来划分训练和测试集。 RQ4: Are DL-based models applicable for detecting clones among different projects?对46个开源的java libraries进行试验。 RQ5: Can trained DL-based models be reused on different, previously unseen projects?DL模型的一个缺点是训练时间长。如果这些模型可以在属于不同领域的不同项目中重复使用，则此培训时间可以摊销。阻碍这些模型重用的主要因素是出现新的词汇，导致我们在预测的时候出现差异。为了解决这个问题，我们决定只针对AST representation做实验进行观察，因为AST中的词汇是固定，只要是java项目用jdt提取的值，不会出现新的词汇，然后我们训练了一个java项目中的AST模型，然后用这个模型产生剩下9个模型的embedding，然后拿原来模型产生的embedding (Lo) 和重用模型产生的embedding (LR)进行对比。 实验结果RQ1 RQ2 RQ3 RQ5]]></content>
      <categories>
        <category>论文阅读笔记</category>
      </categories>
      <tags>
        <tag>clone detection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简单代码克隆检测(五)(控制流特征的提取)]]></title>
    <url>%2F2018%2F06%2F22%2Fexperment6%2F</url>
    <content type="text"><![CDATA[本文主要介绍利用soot工具提取class文件中的cfg特征，并通过GEM(graph embedding Method)来求流程图之间的相似性。 实验背景：实验原理：按照论文中的描述，提取代码的第三个特征是CFG(控制流图的特征)，而且这个特征的提取和利用跟前几个特征不太一样：文中说identifier,AST,bytecoderepresentations,用的是之前我们介绍的autoencoder,而CFG用的是图形的embedding 实验步骤：使用soot工具获取dot文件：使用soot工具对class文件进行解析的时候，一直出错，不是class找不到，就是名字不对应，不管是cmd命令行还是编写程序调用都会出现很多的问题，最终还是采用了文档中不推荐使用的方法，加上参数–allow-phantom-refs,最终是能够解析一个单独的文件，在进行对整个文件夹解析的时候，前面进行都很顺利，在中间出了错，不能继续向下解析了，此时我们已经得到了1w多个文件：解析出来的文件：随便打开一个文件查看里面的内容：利用graphviz生成png图片： 处理dot文件，生成指定格式的训练数据：观察论文作者提供的数据我们可以发现，他只提取了dot 文件中的顶点和顶点的关系，顶点的定义并没有提取，所以我就写了一个处理程序，提取指定字符串。论文作者提供的数据：提取的代码部分截图：这里说一下，为了更加符合项目实际的要求，我把所有小于1k的数据基本上都排除了，留下来的基本上都是可以进行试验的数据，而且和bytecode提取的函数基本上一直，因为二者都是对class文件进行操作的。对文件进行筛选：最终得到的数据形式：共1400多条数据 将生成的数据输入到GEM中得到距离矩阵：这里我直接调用了论文作者给的代码，但其中有一个参数并没有给出具体的值，就是embedding size,我暂时先设置成10，运行的过程因为需要各种神经网络的包，所以我直接在贾老师的服务器上跑了一下：GEM:最终跑出来的距离矩阵：这次跑出来的结果我并没有时间进行统计，之前直接在MATLAB中进行操作就可以得到相似度很高的克隆对，这次是文件，还需要另外写代码，思路基本上都是一样的，所以基本上都可以实现查找相似的克隆对。 实验总结这次实验中遇到的最大的困难就是soot工具的使用，大概断断续续用了2天来进行这个cfg解析，关键还是要看他给的文档，除了普遍的方法，也要尝试一些极端的方法，由于我对最终的结果没有进行统计，所以不能直接说明这个特征对代码克隆的判断有什么影响，但是从目前的数据来说，发现有大量的相同的数据，但是他们的代码并不类似，而且绝大多数的方法的结构是顺序结构，也就是我们前面展示的第一种，所以只要语句的个数相同就能被判断完全相同，我感觉最主要的依赖的representation还是AST和identifier。]]></content>
      <categories>
        <category>Scala</category>
      </categories>
      <tags>
        <tag>clone_detection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简单代码克隆检测(四)(提取二进制数据)]]></title>
    <url>%2F2018%2F06%2F20%2Fexperment5%2F</url>
    <content type="text"><![CDATA[按照Michele等人的论文，加下来应该提取的特征是流程图和二进制特征，但是由于流程图提取的过程中出现很多问题，所以今天我先把二进制代码特征提取看了下。 实验背景：获取scala文件编译的class文件： 之前在提取第一、二中特征的时候，没有用到class文件，这时突然发现源码里面没有class文件，咨询了一下老师，说有两种方法，一个是编译源码，得到最终的class文件，另一种直接找jar包，jar包里面有已经编译好的class文件，果断采取第二种方法，第一种方法太麻烦，而且编译其他人的程序来说没有特定的说明文档很难成功，于是在网上下载了spark相应的jar包，解压缩后查看里面的class文件。 spark项目用到的所有的jar包： 解压spark-core.jar进行试验，由于jar过多，我就直接选了一个spark-core来进行试验。 在这里我发现了一个问题，那就是一个scala文件生成的class文件不止一个，他可以生成2个甚至6、7个，然后我上网查了一下，网上也没有多靠谱的解答，只是有人做了实验，本名的class文件里面的方法是全的，包含$的class文件在运行的时候本名的class文件会调用它。 我自己做的实验提取的两个class文件的内容： Accumulable.scala源文件： Accumulable.class解析出来的文件： Accumulable$$annonfun$1.class解析出来的文件： 而且经过跑出来的数据来看，大多数衍生出来的class文件都有一个apply()函数，但是源文件（scala)里面并没有这个函数，基于此，我先暂时提取本名class里面的特征，没有提取衍生class里面的特征。 实验步骤提取特征： 按照论文中给的方法进行试验，就是利用java的反编译工具javap来提取二进制特征： 论文提及的方法： 论文提及的方法已经给出来，但是他没有给出提取的代码，只给了一行命令行的命令，所以还得编写一个提取特征的程序，程序主要有两个部分组成： 调用cmd，执行javap： 对返回的结果进行字符串的分割以及特征的提取： 最终提取的数据的形式为： 带入autoencode系统中进行训练 在本次实验中，spark-core的jar包里面一共提取了1685条数据，在这里我进行了数据筛选，低于20个词的数据都没有作为数据集，带入之前系统中进行训练，共得到630对克隆对： 总数据： 得到的clone对： clone对的例子： D:\Git\spark\core\src\main\scala\org\apache\spark\Accumulable.scala D:\Git\spark\core\src\main\scala\org\apache\spark\util\AccumulatorV2.scala 实验总结：这次实验证明了确实可以从二进制方面来考虑判断clone,但是我没对数据进行分析，暂时还没有发现那种功能相似但是代码不一样的clone对(也就是第四种类型)。明天争取把控制流的特征提取出来，观察一下。加油！！]]></content>
      <categories>
        <category>Scala</category>
      </categories>
      <tags>
        <tag>clone_detection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简单代码克隆检测(三)(精简数据)]]></title>
    <url>%2F2018%2F06%2F13%2Fexperment4%2F</url>
    <content type="text"><![CDATA[今天主要是解决昨天的问题，第二个特征提取的clone对过多，导致很多较短的方法也被误认为是clone对，今天做的实验室将方法的长度进行了限制， 实验准备： 昨天老师提及到了一点传统的clone detection一般只考虑长度10行以上的代码片段，恰好scala meta 提供了position属性可以供我们进行筛选，但是scala meta 提供的并不是行数，而是这个方法中有多少的字,下面简单展示几个例子，让我们了解一下方法的具体规模信息： 200 字节： 300字节： 400字节： 500字节： 600字节： 1000字节：然后我查看了spark的几个scala文件，发现大多数的方法的长度都很小，都在200-300之间，但是为了获取较为大的函数，我选取了500字节作为阈值进行筛选。代码： 实验步骤： 首先，提取leaf node 和path node数据，共得到5387条数据： 然后分别对leaf node和path node属性进行wordembeddings然后输入到AutoenCODE，(这里提及一下，这个框架里面有几个参数，我在实验的时候并没有进行修改，后续实验的时候需要研究一下，修改超参数观察数据变化。) 实验结果： leaf node: 距离矩阵： 提取的距离小于1e-16的克隆对：总共提取出了114对代码克隆对： 例子： D:\Git\spark\core\src\main\scala\org\apache\spark\api\python\PythonRunner.scala D:\Git\spark\sql\core\src\main\scala\org\apache\spark\sql\execution\python\PythonUDFRunner.scala path node: 距离矩阵： 提取的距离小于1e-16的克隆对：总共提取出了185对代码克隆对： 与leaf node 进行比较，前面我们举的两个例子是 id 为36,4228的例子,我们发现在path node的结果中不仅出现了36,4228的克隆对，还出现了36,4215的克隆对，所以这里只展示id为4215的代码，进行对比：path node:leaf node:对别代码：D:\Git\spark\sql\core\src\main\scala\org\apache\spark\sql\execution\python\ArrowPythonRunner.scala 实验总结： 在我看来 path node是在leaf node的基础上进行的扩充，其中leaf node属性提取的克隆对作为主要研究研究对象，path node仅提供辅助分析的作用。 本次实验代码长度的阈值设置不是很巧当，有昨天的2w条数据变为今天的100多条数据，中间很多小的代码块也可能存在代码克隆。 对于设置代码长度的这个方法，我的想法是只针对path node特征进行操作，因为我们昨天已经发现了，对于leaf node提取的2w条数据发现，基本上代码都是相同的（代码clone的第一种类型），不管是长代码还是短代码，只要全部相同就有很大的可能是代码克隆，所以设置代码长度阈值可以只实施在path node特征上，毕竟起到的是补充辅助的作用。 加油！！！]]></content>
      <categories>
        <category>Scala</category>
      </categories>
      <tags>
        <tag>clone_detection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[雅思训练错题整理]]></title>
    <url>%2F2018%2F06%2F13%2Fyasi1%2F</url>
    <content type="text"><![CDATA[Please enter the password to read. ]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>雅思听力</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简单代码克隆检测二(AST node)]]></title>
    <url>%2F2018%2F06%2F12%2Fexperment3%2F</url>
    <content type="text"><![CDATA[今天主要将论文中所说第二个特征 AST 节点类型提取出来，然后输入到模型中进行了验证 实验思路： 按照论文的思想，第二特征主要用一个high level的特征来体现代码，这个特征就是用 AST节点的类型来表示，比如：Defn.def是方法的类型，Term.for是for语句的类型等等这些，其主要的目的就是让我们处理的方法更加抽象，解决变量名改变(第二种类型clone)克隆方面有着很好的效果。在提取数据的时候作者做了一点小的改变，并没有将所有的节点的类型都作为特征，而是除去了SimpleName,QualifiedName(java)两个类型的节点,相应的我将Scala语言中的Term.Name,Type.Name两个节点的类型也进行了忽略，这样做的主要原因是，第一，这两个节点已经属于较低层次的特征，会与我们之前提取的第一个(identifiers)特征重复,第二是，两节点的数量很多，在java中有将近46%的节点类型在这两个类型之间，所以就直接将这两个节点直接去掉。 数据提取完以后就按照之前的做法输入到AutoenCODE中去进行训练，观察效果，并与第一次实验做了一下对比。 实验步骤： 提取AST节点类型,只要在非叶子节点的visitor中加入相应的统计的代码即可。最终得到的数据的结果如图所示： 对提取的数据进行 wordembeddings ,产生相应的词向量： 将词向量输入到AutoenCODE模型中进行训练，最终得到距离矩阵： 对距离矩阵进行统计，上次实验中只是统计了没行中非零的最小值，所以数据量很小，这次我遍历了整个矩阵，求出距离小于1e-16(上次实验说错了，1e-8是对类级的clone进行判断，这个其实是根据不同的项目来设置不同的值，这里我们暂且先按照论文中的数据俩进行实验)的所有clone对的行数，然后依次找出相应的代码进行比较，与上次的实验结果进行比较。 实验结果： 对于第一次实验，我前面已经说过了，统计的阈值设置成1e-16并且统计所有的数据发现一共有大概有2万条数据，也就是有大概2万对克隆对是通过第一个特征发现的，具体是不是克隆对需要后期人工进行处理，工作十分艰巨。提取克隆对的代码：结果：通过赵俐俐学姐目前的统计的数据来看，这两万条数据中的克隆对是完全一模一样，属于判断是否为clone的第一种类型。例子：D:\Git\spark\core\src\main\scala\org\apache\spark\Accumulable.scalaD:\Git\spark\core\src\main\scala\org\apache\spark\util\AccumulatorV2.scala 第二次实验得到的结果更让我吃惊，大概有30w克隆对：对这30w数据进行简单的分析： 第一个特征里面的数据基本上都包含在内 其次是一些变量名不同，但具有相同结构的函数被识别出来了：D:\Git\spark\core\src\main\scala\org\apache\spark\Accumulable.scala 但是其中大多数的数据都是一些判断错误的数据，我对这些数据进行了简单的观察，发现他们有一个特点，就是样本数据短小，往往就几个简单的语句：而数据量小，就会导致很多差别很大的函数被误判为代码 clone:而一些代码很长的判断则更像是代码克隆：D:\Git\spark\core\src\main\scala\org\apache\spark\Aggregator.scala 下一步工作： 与俐俐学姐统计并观察得到的clone对(第一个特征） 询问并查找如何去除第二种类型的过多的错误数据 加油！！！]]></content>
      <categories>
        <category>Scala</category>
      </categories>
      <tags>
        <tag>clone_detection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简单代码克隆检测一(AST leaf)]]></title>
    <url>%2F2018%2F06%2F10%2Fexperment2%2F</url>
    <content type="text"><![CDATA[今天主要将昨天得到的数据，放到之前看到的模型中跑了一下，看了一下效果，简单叙述一下实验。 实验思路： 将提取的Scala叶子节点的特征作为文本数据，输入到AutoenCODE中 ：AutoenCODE is a Deep Learning infrastructure that allows to encode source code fragments into vector representations, which can be used to learn similarities. https://github.com/micheletufano/AutoenCODE基本上所有的代码这个网站已经提供了，所以只要将代码clone到本地，配置一下环境就可以开始我们的实验。具体的AutoenCODE的原理，我会在以后的博客中详细的解释，本篇博客主要讲如何使用这个框架。 实验步骤： 按照AutoenCODE给的教程，第一步是将我们整理的数据转化成词向量，这里他使用的工具是word2vec，这里注意一下，他的这个word2vec需要build但是windows系统不支持这个build，所以我将转化词向量的这部分的工作转移到了centos服务器上进行，最终得到了测试样本的所有的词向量的数据。 接下来就将这个词向量输入到Recursive Autoencoder(论文中提及是一个斯坦福的情感分析器)中去，最终得到五个结果文件(这里提及一点，训练时间实在是太长了，源代码是使用matlab写的。27000条数据整整跑了一个小时，而且CUP满负荷运行，可能是我的电脑配置低，之后需要优化)。分别是： data.mat contains the input data including the corpus, vocabulary (a 1-by-|V| cell array), and We (the m-by-|V| word embedding matrix where m is the size of the word vectors). So columns of We correspond to word embeddings. corpus.dist.matrix.mat contains the distance matrix saved as matlab file. The values in the distance matrix are doubles that represent the Euclidean distance between two sentences. In particular, the cell (i,j) contains the Euclidean distance between the i-th sentence (i.e., i-th line in corpus.src) and the j-th sentence in the corpus. corpus.dist.matrix.csv contains the distance matrix saved as .csv file. corpus.sentence_codes.mat contain the embeddings for each sentence in the corpus. The sentence_codes object contains the representations for sentences, and the pairwise Euclidean distance between these representations are used to measure similarity. detector.mat contains opttheta (the trained clone detector), hparams, and options. 这里对我们最有用的就是那个矩阵，它显示两句话的距离大小，越小越相似。那么大的矩阵，怎么进行分析！！，只能硬着头皮通过写matlab代码，将矩阵中每行的最小值（非零）提取出来，这样就能得到27000多个最小值，然后再通过这27000个最小值进行筛选，因为本次实验主要看一下效果所以没有注意到那么多的细节，先把最小值求出来先看看。然后我将最小值又进行了划分，论文中说他们的想法是如果距离小于1e-8就认为他们是克隆的代码，然后我以这个为分界线进行了筛选，发现只有5对符合要求，最终的结果在最终结果那里进行展示。求取最小值代码： 实验结果： 当判断距离为1e-8时(5对) 当判断距离为1e-4时(75对) 当判断距离为1e-2时(800多对)通过观察主要分为以下几个类型： 函数重载和相似函数(在同一个文件中)(5对)(800多对)(75对)(75对)D:\Git\spark\core\src\test\scala\org\apache\spark\deploy\master\MasterSuite.scalaD:\Git\spark\core\src\test\scala\org\apache\spark\deploy\master\MasterSuite.scala(75对) 父子继承关系或者同时继承同一个父类的子类之间(不同文件)D:\Git\spark\core\src\main\scala\org\apache\spark\scheduler\DAGScheduler.scala (父类)D:\Git\spark\core\src\test\scala\org\apache\spark\scheduler\TaskSetManagerSuite.scala (子类)(75对)D:\Git\spark\core\src\test\scala\org\apache\spark\scheduler\SparkListenerWithClusterSuite.scalaD:\Git\spark\core\src\test\scala\org\apache\spark\deploy\LogUrlsStandaloneSuite.scala(800对) 相似或者相同的函数(不同文件)D:\Git\spark\core\src\main\scala\org\apache\spark\util\collection\PrimitiveKeyOpenHashMap.scalaD:\Git\spark\graphx\src\main\scala\org\apache\spark\graphx\util\collection\GraphXPrimitiveKeyOpenHashMap.scala(75对)D:\Git\spark\core\src\main\scala\org\apache\spark\deploy\history\HistoryServerArguments.scalaD:\Git\spark\core\src\main\scala\org\apache\spark\deploy\worker\WorkerArguments.scala(75对) 不像是克隆的函数(我的观点)D:\Git\spark\core\src\main\scala\org\apache\spark\status\LiveEntity.scalaD:\Git\spark\core\src\main\scala\org\apache\spark\status\LiveEntity.scala(75对) 实验总结： 由于时间和人手有限，现在只是对这几个结果进行了分析，还有很多对都没有看，之后找时间看看还有没有其他类型，或者老师可以分配几个人帮我看看。 附录： 在得到结果以后，这是忘了如何去找源文件，这里我在原来的parse的基础上加上了一个统计样本所在的文件的文件，通过行数来查找对应的文件，感觉很费时费力。]]></content>
      <categories>
        <category>Scala</category>
      </categories>
      <tags>
        <tag>code_detection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AST树提取进展]]></title>
    <url>%2F2018%2F06%2F09%2Fexperment1%2F</url>
    <content type="text"><![CDATA[今天主要把昨天没有做完的工作进行了扩展，由提取单一文件的叶子节点扩展到提取到整个项目的叶子节点，然后将类级别的数据修改成方法级别的数据 实验步骤： 按照昨天写的代码，只需要加一个循环遍历文件的函数就可以了 然后第一个问题出现了，scala meta 这个工具还不是很成熟，对于部分文件在parse的时候会抛出异常 在网上查了好久，网上也有许多人遇到这个问题，但是scala meta并没有提供解决的办法。经过不懈的努力，最终在评论区找到了解决方法，这个bug主要是s&quot;xxxxxxx&quot;后面直接换行引起的(黑人问号)，只要在\n后面加一个空格就可以了(黑人问号)。 所以我就对我们输入的数据进行了预处理，所有包含字符串s&quot;xxxxx&quot;的行的\n都进行了变换。 第二个问题，嵌套函数的问题，因为我们测试的数据是在方法级别上的进行抽取，所以就会出现嵌套函数的问题，具体的嵌套函数的示例如下图所示： 在这里的问题主要是将子函数抽取出来作为一条数据还是将子函数作为一条像if语句那样的句子作为父函数的一部分，经过跟几位老师讨论，我们决定采用第一种方式，原因是第一子函数的粒度小，第二就是在函数的功能上面还是子函数为主，对于第四种类型的代码克隆的判断来说更加有利。所以我利用栈的思想将子函数剥离出来：最终的结果是： 其中13是父函数，12是子函数。 最终结果： 成功提取spark代码里面的27042条样本，明天开始进行测试算法效果，并且再读一遍论文，整理一下文档加油！！！！ 还要好好学一下英语和线代和算法！！！]]></content>
      <categories>
        <category>Scala</category>
      </categories>
      <tags>
        <tag>AST</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AST]]></title>
    <url>%2F2018%2F06%2F08%2FAST%2F</url>
    <content type="text"><![CDATA[Scala AST 叶子节点提取 背景： 前几天由于考试没有来得及整理基础知识，今天在这里先整理一下这两天做的Scala叶子节点的值提取 Scala 是一门多范式（multi-paradigm）的编程语言，设计初衷是要集成面向对象编程和函数式编程的各种特性。Scala 运行在Java虚拟机上，并兼容现有的Java程序。Scala 源代码被编译成Java字节码，所以它可以运行于JVM之上，并可以调用现有的Java类库。(百度百科） 实验步骤： 使用的工具： scala meta : https://scalameta.org/ Intellij Idea: https://www.jetbrains.com/idea/ 借助的参考资料： scala meta的示例程序 浏览器 构造 scala AST 树：https://astexplorer.net/#/gist/22cf8a3fcb2155c087ae94b4d194c1b6/d10c646ecfae4c69c919408aa3aaefb2deda2df7 实验带代码： 查看 scala meta 源程序可以发现 ，该工具里面有一个Tree的类，该类有children 属性和parent属性： 所以可以根据这个类来进行遍历得到我们需要的叶子节点的数据，在这里我采用visitor的方式来进行遍历。主要的遍历的对象有以下几个： 分别代表Scala中的各个语法，这里在做的时候出现了几个问题。一个是Term.param和Type.param 需要“精准的查找”，不能像其他的Term.Name,Term.Annonate那样，可以通过Term来进行查找： 也就是说其他的Term里面的属性可以通过遍历Term然后再进行查找，但是这个Term.param必须在第一次遍历的时候就指出来，难道Term.param不属于Term?很奇怪。以后再查一查。 代码的逻辑并不难，下面就开始打印叶子节点，通过观察浏览器AST解析器https://astexplorer.net/#/gist/22cf8a3fcb2155c087ae94b4d194c1b6/d10c646ecfae4c69c919408aa3aaefb2deda2df7发现：叶子节点主要在以下几个地方打印：基本数据类型Term.Name处Type.Name 处还有一个是Name处 实验的最终结果： Scala 源代码 提取的叶子节点 源代码 提取的叶子节点 总结：实验结果还未仔细观察，具体的细节有待改进，还有就是上次说的将string值改成等基本数据的转化还未加入。 本博客持续更新。]]></content>
      <categories>
        <category>Scala</category>
      </categories>
      <tags>
        <tag>AST</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[日记]]></title>
    <url>%2F2018%2F06%2F06%2Fdaily1%2F</url>
    <content type="text"><![CDATA[Please enter the password to read. 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]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[软件工程复习提纲]]></title>
    <url>%2F2018%2F06%2F01%2Fsoftware-review%2F</url>
    <content type="text"><![CDATA[本博客是根据软件工程最后一节重点课总结的内容，对软件工程的知识进行了简单的梳理 软件工程简述 软件工程定义： 软件工程是研究应用如何以系统性的、规范化的、可定量的过程化方法 去开发和维护软件， 以及如何把经过时间考验而证明正确的管理技术和当前能够得到的最好的技术结合起来]]></content>
      <categories>
        <category>学科复习</category>
      </categories>
      <tags>
        <tag>软件工程</tag>
      </tags>
  </entry>
</search>
